while 1
    dist = brick.UltrasonicDist(4); % change according to ports
    color = brick.SetColorMode(3, 2);
    disp(dist);

    % Keep moving forward by default
    brick.MoveMotor('B', 30);
    brick.MoveMotor('C', 30);

    % defining distance
    noWallDist = 18; % Adjust
    tooCloseDist = 13; % Adjust

    % check for no wall on left
    if ((dist > noWallDist) && (dist < 30))
        disp("turn into wall");
        % reducing left motor speed
        brick.MoveMotor('B', 20);
        brick.MoveMotor('C', 30);
        pause(1); % Adjust pause
    end
if (dist > 30)
pause(1.5)
 brick.MoveMotor('B', -30)
    brick.MoveMotor('C', -30)
    pause(2)
    brick.MoveMotor('C', 30)
    brick.MoveMotor('B', -10)
    pause(3.5)
end

    % Check if too close to a wall
    if (dist < tooCloseDist)
        disp("turn away from wall");
        % Reducing right motor speed
        brick.MoveMotor('B', 30);
        brick.MoveMotor('C', 20);
        pause(1); % Adjust
    end

if brick.touchPressed(3)
    brick.MoveMotor('B', -30)
    brick.MoveMotor('C', -30)
    pause(2)
    brick.MoveMotor('B', 30)
    brick.MoveMotor('C', -10)
    pause(3.5)
end
if (color == 5) 
    brick.StopMotor('B');
    brick.StopMotor('D');
    pause(1.0);
end

if (color == 2)
    brick.playTone(100,300,500);
    brick.playTone(100,300,500);
end

if (color == 3)
    brick.playTone(100,300,500);
    brick.playTone(100,300,500);
    brick.playTone(100,300,500);

  
end
end
